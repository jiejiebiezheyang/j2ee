1、JavaScript
    主要开发交互的web页面，不需要编译，有浏览器直接解析运行
        是一种脚本语言，也是一种解释型语言(不需要编译)
        用于嵌入到HTML页面中
        实现页面的交互效果
        是一种弱类型语言(变量无需声明类型)

2、JavaScript组成
    ECMAScript      基础核心，主要包含了基本的语法和语句
    BOM             浏览器对象模型
    DOM             文档对象模型

3、引入方式
    内嵌式
        在<script></script>写js代码
    外联式
        在外界先创建js文件然后通过<script>引入外部的js文件
        <script src="js文件路径">

4、变量
    命名规则
        由字母(大小写)，数字，_ 组成
        不能以数字开头
        不能使用关键字或保留字
        区分大小写
    格式
        var(let) 变量名 = 值


5、数据类型
    值类型(基本类型)
        字符串（String） 可以使用单引号或者双引号
        数字(Number)      整数和小数
        布尔(Boolean)
        空（Null） 变量值为null
        未定义（Undefined） 变量没有初始化
    引用数据类型（对象类型）
        对象(Object)
        数组(Array)
        函数(Function)
        正则（RegExp）
        日期（Date）

6、运算符
    算数运算符
        + - * / % ++ --
    赋值运算符
        = += -= *= /= %=
    比较运算符
        > < >= <=
        ==  只比较值
        === 比较值和类型(绝对等于)
    逻辑运算符
        && || !

7、数组
    初始化1
        var 数组名 = [元素1,元素2,...]
    初始化2
        var 数组名 = new Array(元素1,元素2,...)
    初始化3
        var 数组名 = new Array([数组长度])
        数组名[索引] = 元素值

8、函数
    函数式由事件驱动的或者当他被调用时执行的可重复使用的代码块
    语法1
        function 函数名(参数列表){
            函数体
        }
    语法2
        var 函数名 = function(参数列表){
            函数体
        }

9、Object
    方式1
        var 对象名 = {
            属性1:值,
            属性2:值,
            ...,
            函数名:function(参数列表){函数体}
        }
    方式2
    var 对象名 = new Object()
    对象名.属性1 = 值
    对象名.属性2 = 值
    对象名.函数名 = function(参数列表){函数体}

10、Regex(正则表达式)
    格式
        /正则表达式主体/修饰符(可选)
        i	忽略大小写
        g	执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）。
        m	执行多行匹配。
    Regex对象格式
        var 对象名 = /正则表达式主体/修饰符(可选)
    常用方式
        str.search(regex)   查询 匹配的第一次索引值
        str.replace(regex,target)  替换 将str中符合正则的字符替换为target
        regex.test(str)     判断字符串是否匹配正则表达式的规则

11、Date
    创建日期的方法
        new Date()
        new Date(毫秒值)
        new Date(日期字符串)
        new Date(year, monthIndex , day , hours , minutes , seconds )
            monthIndex 从0开始，0表示1月份
    常用方法
        getFullYear() 获取年份
        getTime() 返回从 1970 年 1 月 1 日至今的毫秒数。
        setFullYear() 设置具体的日期
        toUTCString() 将当日的日期（根据 UTC）转换为字符串。
        getDay() 和数组来显示星期，而不仅仅是数字。

12、事件
    相关概念
        事件       发生了一件事
        事件源     发生事件的主体
        事件监听    当事件发生后，给出相关的处理方案
        注册事件    将事件源和事件监听关联起来
    常见事件
        onload      页面加载
        onclick     单机
        ondbclick   双击
        onfocus     获取焦点
        onblur      失去焦点
        onmouseover 鼠标移入
        onmouseout  鼠标移除
        onmousemove 鼠标移动
        onsubmit    表单提交
        onchange    域改变
    注册事件方式
        静态注册
            在元素上直接使用事件属性
        动态注册
            通过js获取元素事件

13、BOM
    Window 对象
    所有浏览器都支持 window 对象。它表示浏览器窗口
        属性
            略
        常用方法
            alert()     弹出警告框
            confirm()   弹出确认框
            prompt()    弹出输入框
            setInterval()   周期性执行指定操作
            setTimeout()    指定时间后，执行一次操作
            clearInterval() 取消setInterval()定时器
            clearTimeout()  取消setTimeout()定时器
    history对象
        back    返回
        forward 前进
        go
    Location对象
        href        获取完整url


14、DOM
    属性
        Document    表示整个页面
            cookie      设置/获取当前文档的所有cookie
            domain      设置/获取当前文档的域名
            lastModify  获取文档最后修改的时间
            referrer	返回载入当前文档的文档的 URL
            title       返回当前文档标题
            URL         返回当前的完整url
    方法
        getElementById()	        通过id获取指定元素
        getElementsByTagName()      通过标签名获取指定元素
        getElementsByClassName()	通过类名获取指定元素
        getElementsByName()	        通过name属性获取指定元素
        createElement()             创建元素节点
        createTextNode()            创建文本节点
        createAttribute()           创建属性节点

    Element(页面元素)
    属性
        innerHtml       获取/设置元素内的HTML
        innerText       获取/设置元素内的文本
        textContent     获取/设置元素内的文本
        style           获取/设置元素的样式
    方法
        getAttribute()      获取属性
        setAttribute()      设置属性
        appendChild()       添加子元素
        cloneNode()         克隆节点










































































